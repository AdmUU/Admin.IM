# syntax=docker/dockerfile:1-labs

FROM node:20-alpine3.20 AS build-admin

ARG APP_VERSION
ARG VITE_ADMIN_TITLE
ARG USE_CN_MIRROR=false

ENV VITE_APP_TITLE=${VITE_ADMIN_TITLE:-"AdminIM"} \
    VITE_APP_VERSION=${APP_VERSION:-"latest"}

RUN if [ "$USE_CN_MIRROR" = "true" ]; then \
    npm config set registry https://registry.npmmirror.com; \
    fi

RUN --mount=type=cache,target=/root/.npm,id=npm-cache \
    npm install -g pnpm

RUN if [ "$USE_CN_MIRROR" = "true" ]; then \
    pnpm config set registry https://registry.npmmirror.com; \
    fi

WORKDIR /opt/www/

COPY ./web-admin/package.json ./web-admin/.env ./
COPY ./web-admin/scripts/ ./scripts/

RUN --mount=type=cache,target=/root/.local/share/pnpm/store,id=pnpm-store \
    --mount=type=cache,target=/root/.cache/pnpm,id=pnpm-cache \
    --mount=type=cache,target=/opt/www/node_modules,id=admin-node-modules \
    pnpm install

COPY ./web-admin/ ./

RUN sed -i "s/<title>.*/<title>${VITE_APP_TITLE}<\/title>/" ./index.html

RUN --mount=type=cache,target=/root/.cache/pnpm,id=pnpm-cache \
    --mount=type=cache,target=/opt/www/node_modules,id=admin-node-modules \
    pnpm build --mode production

FROM node:20-alpine3.20 AS build-user

ARG APP_VERSION
ARG VITE_USER_TITLE
ARG USE_CN_MIRROR=false

ENV VITE_APP_TITLE=${VITE_USER_TITLE:-"AdminIM"} \
    VITE_APP_VERSION=${APP_VERSION:-"latest"}

RUN if [ "$USE_CN_MIRROR" = "true" ]; then \
    npm config set registry https://registry.npmmirror.com; \
    fi

RUN --mount=type=cache,target=/root/.npm,id=npm-cache \
    npm install -g pnpm

RUN if [ "$USE_CN_MIRROR" = "true" ]; then \
    pnpm config set registry https://registry.npmmirror.com; \
    fi

WORKDIR /opt/www/

COPY ./web-user/package.json ./web-user/.env ./

RUN --mount=type=cache,target=/root/.local/share/pnpm/store,id=pnpm-store \
    --mount=type=cache,target=/root/.cache/pnpm,id=pnpm-cache \
    --mount=type=cache,target=/opt/www/node_modules,id=user-node-modules \
    pnpm install

COPY ./web-user/ ./

RUN sed -i "s/<title>.*/<title>${VITE_APP_TITLE}<\/title>/" ./index.html

RUN --mount=type=cache,target=/root/.cache/pnpm,id=pnpm-cache \
    --mount=type=cache,target=/opt/www/node_modules,id=user-node-modules \
    pnpm build --mode production

FROM nginx:alpine AS production
LABEL maintainer="AdminIM-DEV <dev@admin.im>" version="1.0" license="MIT" app.name="Admin.IM Frontend"

COPY --from=build-admin /opt/www/dist /usr/share/nginx/html/web-admin
COPY --from=build-user /opt/www/dist /usr/share/nginx/html/web-user
COPY ./docker/nginx-frontend/servers/adm-frontend.conf /etc/nginx/conf.d/default.conf